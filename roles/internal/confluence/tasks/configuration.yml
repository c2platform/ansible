---
- name: confluence-init.properties
  template:
    dest: "{{ confluence_home_version_app }}/confluence/WEB-INF/classes/confluence-init.properties"
    owner: "{{ confluence_owner }}"
    group: "{{ confluence_group }}"
    src: confluence-init.properties.j2
  notify: confluence-systemctl-restart

- name: Check confluence.properties exists
  stat:
    path: "{{ confluence_home_version_home }}/confluence.cfg.xml"
  register: confluence_cfg_xml

- name: Confluence setup
  debug:
    msg: "Confluence has not been setup yet. Use a browser to navigate to http://localhost:{{ confluence_web_port }}  and complete Confluence setup"
  changed_when: true
  when: not confluence_cfg_xml.stat.exists

- name: confluence.cfg.xml
  xml:
    path: "{{ confluence_home_version_home }}/confluence.cfg.xml"
    xpath: "/confluence-configuration/properties/property[@name='{{ item }}']"
    value: "{{ confluence_database_hibernate.generic[item] }}"
  when: confluence_cfg_xml.stat.exists
  with_items: "{{ confluence_database_hibernate.generic }}"
  notify: confluence-systemctl-restart

- name: "confluence.cfg.xml {{ confluence_database_type }}"
  xml:
    path: "{{ confluence_home_version_home }}/confluence.cfg.xml"
    xpath: "/confluence-configuration/properties/property[@name='{{ item }}']"
    value: "{{ confluence_database_hibernate[confluence_database_type]['set'][item] }}"
  when: confluence_cfg_xml.stat.exists
  with_items: "{{ confluence_database_hibernate[confluence_database_type]['set'] }}"
  notify: confluence-systemctl-restart

- name: "Remove from confluence.cfg.xml {{ confluence_database_type }}"
  xml:
    path: "{{ confluence_home_version_home }}/confluence.cfg.xml"
    xpath: "/confluence-configuration/properties/property[@name='{{ item }}']"
    state: absent
  when: confluence_cfg_xml.stat.exists
  with_items: "{{ confluence_database_hibernate[confluence_database_type]['remove'] }}"
  notify: confluence-systemctl-restart

- name: server.xml
  template:
    dest: "{{ confluence_home_version_app }}/conf/server.xml"
    owner: "{{ confluence_owner }}"
    group: "{{ confluence_group }}"
    src: server.xml.j2
  notify: confluence-systemctl-restart

- name: Extra libaries
  get_url:
    checksum: "{{ item.checksum }}"
    dest: "{{ confluence_home_version_app }}/confluence/WEB-INF/lib/{{ item.url|basename }}"
    owner: "{{ confluence_owner }}"
    group: "{{ confluence_group }}"
    url: "{{ item.url }}"
  with_items: "{{ confluence_libraries }}" 
  notify: confluence-systemctl-restart

- name: Xms, Xmx and other CATALINA_OPTS in setenv.sh
  replace:
    path: "{{ confluence_home_version_app }}/bin/setenv.sh"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items: 
    - regexp: '^CATALINA_OPTS="-Xms.*$'
      replace: "CATALINA_OPTS=\"-Xms{{ confluence_jvm_minimum_memory }} -Xmx{{ confluence_jvm_maximum_memory }} -XX:+UseG1GC {{ confluence_cataline_opts }} ${CATALINA_OPTS}\""
    - regexp: '-XX:ReservedCodeCacheSize=.*? '
      replace: '-XX:ReservedCodeCacheSize={{ confluence_jvm_reserved_code_cache_size }} '
  notify: confluence-systemctl-restart

#- name: env file CONFLUENCE_HOME etc
#  copy:
#    content: >
#      export CONFLUENCE_HOME={{ confluence_home_version_home }}
#      export CONFLUENCE_USER={{ confluence_owner }}
#    dest: /etc/profile.d/confluence.sh
#    owner: "{{ confluence_owner }}"
#    group: "{{ confluence_group }}"
