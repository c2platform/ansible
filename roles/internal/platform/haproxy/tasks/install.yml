---
- name: Required packages
  package:
    name: "{{ haproxy_packages }}"

- name: Make dir
  file:
    path: "{{ haproxy_make_dir }}"
    state: directory

- name: Get source
  get_url:
    url: "{{ haproxy_versions[haproxy_version]['url'] }}"
    checksum: "{{ haproxy_versions[haproxy_version]['checksum'] }}"
    dest: "{{ haproxy_make_dir }}/{{ haproxy_versions[haproxy_version]['url']|basename }}"

- name: Extract source tar
  unarchive:
    src: "{{ haproxy_make_dir }}/{{ haproxy_versions[haproxy_version]['url']|basename }}"
    dest: "{{ haproxy_make_dir }}"
    remote_src: yes

- name: Make
  make:
    chdir: "{{ haproxy_make_dir }}/haproxy-{{ haproxy_version }}"
    params:
      TARGET: linux-glibc
      USE_OPENSSL: 1
      USE_ZLIB: 1
      USE_PCRE: 1
      USE_SYSTEMD: 1

- name: Make install
  make:
    chdir: "{{ haproxy_make_dir }}/haproxy-{{ haproxy_version }}"
    target: install

#
#- name: Ensure HAProxy is installed.
#  package: 
#    name: "{{ haproxy_package }}"
#    state: present
#
#- name: Ensure HAProxy is enabled (so init script will start it on Debian).
#  lineinfile:
#    dest: /etc/default/haproxy
#    regexp: "^ENABLED.+$"
#    line: "ENABLED=1"
#    state: present
#  when: ansible_os_family == 'Debian'
#
#- name: Get HAProxy version.
#  command: "{{ haproxy_bin }} -v"
#  register: haproxy_version_result
#  changed_when: false
#  check_mode: no
#
#- name: Set HAProxy version.
#  set_fact:
#    haproxy_version: "{{ '1.5' if '1.5.' in haproxy_version_result.stdout else '1.4' }}"
#
#- name: Copy HAProxy configuration in place.
#  template:
#    src: haproxy.cfg.j2
#    dest: /etc/haproxy/haproxy.cfg
#    mode: 0644
#    validate: haproxy -f %s -c -q
#  notify: restart haproxy
#
#- name: Ensure HAProxy is started and enabled on boot.
#  service: name=haproxy state=started enabled=yes