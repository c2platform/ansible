---
- name: stop for upgrade, rollback or rollfoward
  service: name=bitbucket state=stopped
  when: bitbucket_lcm['operation'] in ['upgrade','rollback','rollforward'] 

- name: add bitbucket owner
  user:
    name: "{{ bitbucket_owner }}"
    shell: /bin/bash
    system: true

- name: home directory
  file:
    path: "{{ bitbucket_home }}"
    state: directory
    group: "{{ bitbucket_owner }}"
    owner: "{{ bitbucket_group }}" 

- name: install folder
  file:
    path: "{{ bitbucket_home_version }}"
    state: directory
    group: "{{ bitbucket_owner }}"
    owner: "{{ bitbucket_group }}"    
  #register: install_symlink

- name: response file
  template:
   dest: "{{ bitbucket_home }}/reponse.varfile"
   owner: "{{ bitbucket_owner }}"
   src: response.varfile.j2

- name: download installer
  get_url:
    url: "{{ bitbucket_versions[bitbucket_version]['url'] }}"
    dest: "{{ bitbucket_home }}/{{ bitbucket_versions[bitbucket_version]['url']|basename }}"
    checksum: "{{ bitbucket_versions[bitbucket_version]['checksum'] }}"
    timeout: 300
    mode: 1373
    owner: "{{ bitbucket_owner }}"
    group: "{{ bitbucket_group }}"
  register: get_url_result
  until: get_url_result is succeeded
  when: bitbucket_lcm['operation'] in ['upgrade','install'] 

- name: remove installer
  file:
    path: "{{ bitbucket_home }}/{{ bitbucket_versions[bitbucket_version]['url']|basename }}"
    state: absent
  when: bitbucket_lcm['operation'] not in ['upgrade','install'] 

- name: run installer 
  command: "{{ bitbucket_home }}/{{ bitbucket_versions[bitbucket_version]['url']|basename }} -q -varfile {{ bitbucket_home }}/reponse.varfile"
  become: yes
  become_method: sudo
  become_user: bitbucket
  # become_flags: '-s /bin/sh'
  notify:
    - bitbucket-systemctl-daemon-reload
    - bitbucket-systemctl-restart
  when: bitbucket_lcm['operation'] in ['upgrade','install']

- name: Create symbolic link install
  file:
   src: "{{ bitbucket_home_version }}"
   dest: "{{ bitbucket_home_link }}"
   state: link  