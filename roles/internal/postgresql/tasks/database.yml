---
- set_fact: 
    lcm_role_upgrade: "{{ role_name }}"
  when: lcm_role_upgrade is not defined

- name: create database user
  postgresql_user:
    name: "{{ vars[lcm_role_upgrade + '_database_username'] }}"
    password: "{{ vars[lcm_role_upgrade + '_database_password'] }}"
    db: "postgres"
    login_host: "{{ vars[lcm_role_upgrade + '_database_host'] }}"
    login_password: "{{ vars[lcm_role_upgrade + '_database_admin_password'] }}"
    login_user: "{{ vars[lcm_role_upgrade + '_database_admin_username'] }}"
    port: "{{ vars[lcm_role_upgrade + '_database_port'] }}"
    state: "{{ item.state | default('present') }}"
  no_log: false
  vars:
    ansible_ssh_pipelining: true

# Terminate and block sessions to the template database on upgrade
# A database cannot be copied with active sessions
- include: ../../postgresql/tasks/terminate-block-sessions.yml 
  when: vars[lcm_role_upgrade + '_lcm_operation'] == 'upgrade'

- name: create database schema 
  postgresql_db:
    name: "{{ vars[lcm_role_upgrade + '_database_name_version'] }}"
    lc_collate: "{{ vars[lcm_role_upgrade + '_database_lc_collate']|default('en_US.UTF-8') }}"
    lc_ctype: "{{ vars[lcm_role_upgrade + '_database_lc_ctype']|default('en_US.UTF-8') }}"
    encoding: "{{ vars[lcm_role_upgrade + '_database_encofing']|default('UTF-8') }}"
    template: "{{ vars[lcm_role_upgrade + '_database_template'] }}"
    login_host: "{{ vars[lcm_role_upgrade + '_database_host'] }}"
    login_password: "{{ vars[lcm_role_upgrade + '_database_admin_password'] }}"
    login_user: "{{ vars[lcm_role_upgrade + '_database_admin_username'] }}"
    port: "{{ vars[lcm_role_upgrade + '_database_port'] }}"
    owner: "{{ vars[lcm_role_upgrade + '_database_username'] }}"
    state: "{{ item.state | default('present') }}"
  vars:
    ansible_ssh_pipelining: true

- include: ../../postgresql/tasks/allow-sessions.yml 
  when: vars[lcm_role_upgrade + '_lcm_operation'] == 'upgrade'
